allprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
//    apply plugin: 'checkstyle'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    version = '0.1-SNAPSHOT'
}

subprojects {
}

ext {
    springVersion = '4.2.4.RELEASE'
    spockVersion = '1.0-groovy-2.4'
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.apache.logging.log4j:log4j-api:2.5')
    compile('org.apache.logging.log4j:log4j-core:2.5')
    compile("org.springframework:spring-core:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-aspects:${springVersion}")
    compile('org.springframework.amqp:spring-rabbit:1.5.3.RELEASE')

    testCompile('junit:junit:4.12')
    testCompile("org.springframework:spring-test:${springVersion}")
    testCompile("org.spockframework:spock-spring:${spockVersion}")
    testCompile("org.spockframework:spock-core:${spockVersion}")
}

//checkstyle {
//    toolVersion = "6.5"
//}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.11'
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}


task runServer(type: JavaExec) {
    main = 'dvoraka.avservice.server.AmqpAVServer'
    classpath = sourceSets.main.runtimeClasspath
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
