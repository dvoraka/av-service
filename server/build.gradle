description = 'Server components'

dependencies {
    compile project(':common')
    compile project(':core')
}

task configureEnvironment(type: JavaExec) {
    description = 'Configure environment'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.EnvironmentConfigurator'
    classpath = sourceSets.main.runtimeClasspath
}

task runAmqpServer(type: JavaExec) {
    description = 'Run AMQP server'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.amqp.AmqpServerRunner'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

task runJmsServer(type: JavaExec) {
    description = 'Run JMS server'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.jms.JmsServerRunner'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
//    environment('spring.profiles.active', '')
}

task runCustomServer(type: JavaExec) {
    description = 'Run custom server'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.CustomServerRunner'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

task runAmqpToJmsBridge(type: JavaExec) {
    description = 'Run AMQP to JMS bridge'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.amqp.AmqpToJmsBridgeRunner'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

task runJmsToAmqpBridge(type: JavaExec) {
    description = 'Run JMS to AMQP bridge'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.amqp.JmsToAmqpBridgeRunner'
    standardInput = System.in
    classpath = sourceSets.main.runtimeClasspath
}

task runAmqpLoadTest(type: JavaExec) {
    description = 'Run AMQP load test'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.amqp.AmqpLoadTestRunner'
    classpath = sourceSets.main.runtimeClasspath
}

task runJmsLoadTest(type: JavaExec) {
    description = 'Run JMS load test'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.jms.JmsLoadTestRunner'
    classpath = sourceSets.main.runtimeClasspath
}

task runAmqpCheck(type: JavaExec) {
    description = 'Run AMQP infrastructure check'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.amqp.AmqpCheckRunner'
    classpath = sourceSets.main.runtimeClasspath
}

task runJmsCheck(type: JavaExec) {
    description = 'Run JMS infrastructure check'
    group = "${taskGroupName}"

    main = 'dvoraka.avservice.server.runner.jms.JmsCheckRunner'
    classpath = sourceSets.main.runtimeClasspath
}
